// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoGestionVenta.Models;

#nullable disable

namespace ProyectoGestionVenta.Migrations
{
    [DbContext(typeof(GestionVentasContext))]
    partial class GestionVentasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProyectoGestionVenta.Models.Articulo", b =>
                {
                    b.Property<int>("ArticuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("articuloId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticuloId"), 1L, 1);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoriaId");

                    b.Property<string>("Codigo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigo");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("costo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("precio_venta");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("proveedorId");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("ArticuloId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex(new[] { "Nombre" }, "UQ__articulo__72AFBCC6CD801CEF")
                        .IsUnique();

                    b.ToTable("articulo", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Categorium", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoriaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("CategoriaId")
                        .HasName("PK__categori__6378C0C09DE82B73");

                    b.HasIndex(new[] { "Nombre" }, "UQ__categori__72AFBCC6DE9F50FB")
                        .IsUnique();

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.DetalleIngreso", b =>
                {
                    b.Property<int>("DetalleIngresoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("detalle_ingresoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleIngresoId"), 1L, 1);

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int")
                        .HasColumnName("articuloId");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IngresoId")
                        .HasColumnType("int")
                        .HasColumnName("ingresoId");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("precio");

                    b.HasKey("DetalleIngresoId");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("IngresoId");

                    b.ToTable("detalle_ingreso", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.DetalleVentum", b =>
                {
                    b.Property<int>("DetalleVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("detalle_ventaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleVentaId"), 1L, 1);

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int")
                        .HasColumnName("articuloId");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("descuento");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("precio");

                    b.Property<int>("VentaId")
                        .HasColumnType("int")
                        .HasColumnName("ventaId");

                    b.HasKey("DetalleVentaId")
                        .HasName("PK__detalle___000CCCF790943053");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("VentaId");

                    b.ToTable("detalle_venta", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Ingreso", b =>
                {
                    b.Property<int>("IngresoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ingresoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngresoId"), 1L, 1);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<decimal>("Impuesto")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("impuesto");

                    b.Property<string>("NumComprobante")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("num_comprobante");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("proveedorId");

                    b.Property<string>("SerieComprobante")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("serie_comprobante");

                    b.Property<string>("TipoComprobante")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo_comprobante");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("total");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    b.HasKey("IngresoId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ingreso", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Persona", b =>
                {
                    b.Property<int>("Personaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("personaid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Personaid"), 1L, 1);

                    b.Property<string>("Direccion")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("NumDocumento")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("num_documento");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo_documento");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo_persona");

                    b.HasKey("Personaid");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("proveedorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorId"), 1L, 1);

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contacto");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("direccion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Representante")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("representante");

                    b.Property<int?>("Rnc")
                        .HasColumnType("int")
                        .HasColumnName("rnc");

                    b.HasKey("ProveedorId");

                    b.ToTable("proveedor", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rolId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.HasKey("RolId");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Direccion")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("NumDocumento")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("num_documento");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("password");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rolId");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo_documento");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Ventum", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ventaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaId"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("clienteId");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora");

                    b.Property<decimal>("Impuesto")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("impuesto");

                    b.Property<string>("NumComprobante")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("num_comprobante");

                    b.Property<string>("SerieComprobante")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("serie_comprobante");

                    b.Property<string>("TipoComprobante")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo_comprobante");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("total");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    b.HasKey("VentaId")
                        .HasName("PK__venta__40B8EB54E40D8982");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("venta", (string)null);
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Articulo", b =>
                {
                    b.HasOne("ProyectoGestionVenta.Models.Categorium", "Categoria")
                        .WithMany("Articulos")
                        .HasForeignKey("CategoriaId")
                        .IsRequired()
                        .HasConstraintName("FK__articulo__catego__47DBAE45");

                    b.HasOne("ProyectoGestionVenta.Models.Proveedor", "Proveedor")
                        .WithMany("Articulos")
                        .HasForeignKey("ProveedorId")
                        .IsRequired()
                        .HasConstraintName("FK__articulo__provee__48CFD27E");

                    b.Navigation("Categoria");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.DetalleIngreso", b =>
                {
                    b.HasOne("ProyectoGestionVenta.Models.Articulo", "Articulo")
                        .WithMany("DetalleIngresos")
                        .HasForeignKey("ArticuloId")
                        .IsRequired()
                        .HasConstraintName("FK__detalle_i__artic__5070F446");

                    b.HasOne("ProyectoGestionVenta.Models.Ingreso", "Ingreso")
                        .WithMany("DetalleIngresos")
                        .HasForeignKey("IngresoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__detalle_i__ingre__4F7CD00D");

                    b.Navigation("Articulo");

                    b.Navigation("Ingreso");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.DetalleVentum", b =>
                {
                    b.HasOne("ProyectoGestionVenta.Models.Articulo", "Articulo")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("ArticuloId")
                        .IsRequired()
                        .HasConstraintName("FK__detalle_v__artic__5812160E");

                    b.HasOne("ProyectoGestionVenta.Models.Ventum", "Venta")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__detalle_v__venta__571DF1D5");

                    b.Navigation("Articulo");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Ingreso", b =>
                {
                    b.HasOne("ProyectoGestionVenta.Models.Persona", "Proveedor")
                        .WithMany("Ingresos")
                        .HasForeignKey("ProveedorId")
                        .IsRequired()
                        .HasConstraintName("FK__ingreso__proveed__4BAC3F29");

                    b.HasOne("ProyectoGestionVenta.Models.Usuario", "Usuario")
                        .WithMany("Ingresos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__ingreso__usuario__4CA06362");

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Usuario", b =>
                {
                    b.HasOne("ProyectoGestionVenta.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK__usuario__rolId__3D5E1FD2");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Ventum", b =>
                {
                    b.HasOne("ProyectoGestionVenta.Models.Persona", "Cliente")
                        .WithMany("Venta")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__venta__clienteId__534D60F1");

                    b.HasOne("ProyectoGestionVenta.Models.Usuario", "Usuario")
                        .WithMany("Venta")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__venta__usuarioId__5441852A");

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Articulo", b =>
                {
                    b.Navigation("DetalleIngresos");

                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Categorium", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Ingreso", b =>
                {
                    b.Navigation("DetalleIngresos");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Persona", b =>
                {
                    b.Navigation("Ingresos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Proveedor", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Usuario", b =>
                {
                    b.Navigation("Ingresos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ProyectoGestionVenta.Models.Ventum", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
